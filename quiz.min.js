Game.prototype.selectQuizAnswer=function(answerElementId){if(!this.quizConfig)return;const currentQuestion=this.quizConfig.questions[this.currentQuestionIndex];if(!this.questionClicks){this.questionClicks={}}if(!this.questionClicks[currentQuestion.id]){this.questionClicks[currentQuestion.id]=0}const maxClicks=currentQuestion.maxClicks||currentQuestion.answers.length;if(this.questionClicks[currentQuestion.id]>=maxClicks){return}this.questionClicks[currentQuestion.id]++;if(!this.selectedAnswers){this.selectedAnswers={}}if(!this.selectedAnswers[currentQuestion.id]){this.selectedAnswers[currentQuestion.id]=[]}const selectedAnswer=currentQuestion.answers.find(a=>a.element===answerElementId);if(selectedAnswer){this.selectedAnswers[currentQuestion.id].push(selectedAnswer)}if(this.questionClicks[currentQuestion.id]>=maxClicks){this.lockQuizAnswers();setTimeout(()=>{this.executeExitAction(currentQuestion)},1e3)}};Game.prototype.lockQuizAnswers=function(){if(!this.quizConfig)return;const currentQuestion=this.quizConfig.questions[this.currentQuestionIndex];currentQuestion.answers.forEach(answer=>{const element=document.getElementById(answer.element);if(element){element.classList.remove("clickable")}})};Game.prototype.executeExitAction=function(question){const selectedAnswers=this.selectedAnswers[question.id]||[];const correctAnswers=question.answers.filter(a=>a.correct);const gotAllCorrect=correctAnswers.every(correctAns=>selectedAnswers.some(selectedAns=>selectedAns.element===correctAns.element));const noWrongAnswers=selectedAnswers.every(selectedAns=>selectedAns.correct);const isCorrect=gotAllCorrect&&noWrongAnswers&&selectedAnswers.length===correctAnswers.length;this.lastQuestionCorrect=isCorrect;const hasInterstitial=question.interstitials&&(isCorrect&&question.interstitials.correct||!isCorrect&&question.interstitials.incorrect);if(this.quizConfig.affirmation){this.showAffirmation(question,selectedAnswers);const quizAffirmation=this.quizConfig.affirmation;const questionAffirmation=question.affirmation;const affirmation=this.mergeAffirmations(quizAffirmation,questionAffirmation);setTimeout(()=>{if(hasInterstitial){this.clearScene("quiz");this.isInInterstitial=true;const interstitialScene=isCorrect?question.interstitials.correct:question.interstitials.incorrect;this.switchScene(interstitialScene)}else{this.proceedAfterQuestion()}},affirmation.duration||2e3)}else{if(hasInterstitial){this.clearScene("quiz");this.isInInterstitial=true;const interstitialScene=isCorrect?question.interstitials.correct:question.interstitials.incorrect;this.switchScene(interstitialScene)}else{this.proceedAfterQuestion()}}};Game.prototype.showAffirmation=function(question,selectedAnswers){const quizAffirmation=this.quizConfig.affirmation;const questionAffirmation=question.affirmation;if(!quizAffirmation&&!questionAffirmation)return;const affirmation=this.mergeAffirmations(quizAffirmation,questionAffirmation);if(!affirmation)return;const answerItems=question.answers.map(ans=>({element:document.getElementById(ans.element),answer:ans}));const target=affirmation.target||"element";if(affirmation.type==="dim"){if(target==="parent"){answerItems.forEach(item=>{if(item.element&&!item.answer.correct){const parent=item.element.parentElement;if(parent){parent.style.opacity=affirmation.opacity||.3}}})}else{answerItems.forEach(item=>{if(item.element&&!item.answer.correct){item.element.style.opacity=affirmation.opacity||.3}})}}else if(affirmation.type==="overlay"){if(target==="parent"){answerItems.forEach(item=>{if(item.element&&!item.answer.correct){const parent=item.element.parentElement;if(parent){this.addAffirmationOverlay(parent,affirmation)}}})}else{answerItems.forEach(item=>{if(item.element&&!item.answer.correct){this.addAffirmationOverlay(item.element,affirmation)}})}}else if(affirmation.type==="animation"){const audience=affirmation.audience||"incorrect";const targets=audience==="incorrect"?answerItems.filter(item=>!item.answer.correct):audience==="correct"?answerItems.filter(item=>item.answer.correct):answerItems;targets.forEach(item=>{const element=item.element;const scaleDuration=affirmation.scaleDuration||500;const currentTransform=element.style.transform||"";const scaleValue=affirmation.scale||.8;const newTransform=currentTransform?`${currentTransform} scale(${scaleValue})`:`scale(${scaleValue})`;element.style.transition=`opacity ${scaleDuration}ms ease, transform ${scaleDuration}ms ease`;element.style.opacity=affirmation.opacity||.5;element.style.transform=newTransform})}};Game.prototype.mergeAffirmations=function(quizAffirmation,questionAffirmation){if(!quizAffirmation)return questionAffirmation;if(!questionAffirmation)return quizAffirmation;return this.deepMerge(quizAffirmation,questionAffirmation)};Game.prototype.deepMerge=function(target,source){const result={...target};for(const key in source){if(source[key]&&typeof source[key]==="object"&&!Array.isArray(source[key])){result[key]=this.deepMerge(result[key]||{},source[key])}else{result[key]=source[key]}}return result};Game.prototype.addAffirmationOverlay=function(element,overlayConfig){const overlay=document.createElement("div");overlay.className="affirmation-overlay";overlay.style.position="absolute";const widthPercent=overlayConfig.widthPercent||100;const heightPercent=overlayConfig.heightPercent||100;const position=overlayConfig.position||"center";const offsetX=overlayConfig.offsetX||0;const offsetY=overlayConfig.offsetY||0;overlay.style.width=widthPercent+"%";overlay.style.height=heightPercent+"%";if(position==="center"){overlay.style.left="50%";overlay.style.top="50%";overlay.style.transform="translate(-50%, -50%)"}else if(position==="topleft"){overlay.style.left=offsetX+"%";overlay.style.top=offsetY+"%";overlay.style.transform="none"}overlay.style.backgroundColor=overlayConfig.colour||"#000000";overlay.style.opacity=overlayConfig.opacity||.5;overlay.style.borderRadius=(overlayConfig.borderRadius||0)+"px";overlay.style.pointerEvents="none";overlay.style.zIndex="10";element.appendChild(overlay)};Game.prototype.getOutcomeScene=function(){let correctCount=0;const totalQuestions=this.quizConfig.questions.length;this.quizConfig.questions.forEach(q=>{const sel=this.selectedAnswers[q.id];if(sel&&sel.length>0){const corr=q.answers.filter(a=>a.correct);const isCorrect=corr.every(correctAns=>sel.some(selectedAns=>selectedAns.element===correctAns.element))&&sel.every(selectedAns=>selectedAns.correct)&&sel.length===corr.length;if(isCorrect)correctCount++}});const score=correctCount/totalQuestions;const thresholds=this.quizConfig.outcomes.thresholds||[];for(const threshold of thresholds){if(score>=threshold.minScore){return threshold.scene}}return thresholds[thresholds.length-1]?.scene||"outcome_incorrect"};Game.prototype.proceedAfterQuestion=function(){if(this.currentQuestionIndex<this.quizConfig.questions.length-1){this.currentQuestionIndex++;this.showCurrentQuestion()}else{const targetScene=this.getOutcomeScene();this.switchScene(targetScene)}};Game.prototype.continueFromInterstitial=function(){this.isInInterstitial=false;this.lastQuestionCorrect=null;if(this.currentQuestionIndex>=this.quizConfig.questions.length-1){const targetScene=this.getOutcomeScene();this.switchScene(targetScene)}else{this.isContinuingFromInterstitial=true;this.switchScene("quiz");setTimeout(()=>{this.proceedAfterQuestion()},this.gameConfig.game.fadeDuration+50)}};Game.prototype.showCurrentQuestion=function(){if(!this.quizConfig)return;const questions=this.quizConfig.questions;questions.forEach((question,index)=>{const element=document.getElementById(question.questionElement);if(element){if(index===this.currentQuestionIndex){element.classList.remove("hidden");if(window.emit){window.emit({scene:"quiz",sub_scene:question.id,action:"scene_load",self:"",value:"",target:""})}}else{element.classList.add("hidden")}}})};Game.prototype.resetQuizState=function(){if(this.isContinuingFromInterstitial){this.isContinuingFromInterstitial=false;return}this.currentQuestionIndex=0;this.selectedAnswers={};this.questionClicks={};this.isInInterstitial=false;this.lastQuestionCorrect=null;this.showCurrentQuestion()};